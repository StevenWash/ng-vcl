import { ChangeDetectorRef } from '@angular/core';
export declare class MonthPickerComponent {
    private readonly ref;
    private static readonly Tag;
    private readonly tag;
    private static readonly MonthCount;
    private readonly now;
    months: string[];
    private yearMeta;
    private currentMeta;
    private availableColors;
    private debug;
    expanded: boolean;
    private expandedChange;
    currentYear: number;
    private currentYearChange;
    private prevYearBtnTap;
    private nextYearBtnTap;
    private select;
    private deselect;
    tabindex: number;
    private monthsPerRow;
    private colors;
    private locales;
    private dateOptions;
    expandable: boolean;
    prevYearAvailable: boolean;
    nextYearAvailable: boolean;
    private useAvailableMonths;
    private closeBtnIcon;
    prevYearBtnIcon: string;
    nextYearBtnIcon: string;
    maxSelectableMonths: number;
    private minSelectableMonths;
    private minYear;
    private maxYear;
    constructor(ref: ChangeDetectorRef);
    private ngOnInit();
    private ngOnChanges(changes);
    private setYearMeta(year);
    private createYearMeta(year);
    selectMonth(year: number, month: number): void;
    preselectMonth(year: number, month: number, color: string): void;
    dePreselectMonth(year: number, month: number): void;
    isMonthAvailable(year: number, month: number): boolean;
    isDateInBounds(year: number, month: number): boolean;
    isMonthInBounds(month: number): boolean;
    isYearInBounds(year: number): boolean;
    isMonthPreselected(year: number, month: number): boolean;
    private getYearMeta(year);
    private iterateMonthMetas(cb);
    getSelectedDates(): string[];
    private setMonthBackgroundColor(year, month);
    private getMonthBackgroundColor();
    deselectMonth(year: number, month: number): void;
    isMonthSelected(year: number, month: number): boolean;
    private clearMonthBackgroundColor(year, month);
    deselectAllMonths(): void;
    addAvailableMonth(year: number, month: number): void;
    removeAvailableMonth(year: number, month: number): void;
    removeAllAvailableMonths(): void;
    onPrevYearTap(): void;
    onNextYearTap(): void;
    private onCloseBtnTap();
    private notifySelect(date);
    private notifyDeselect(date);
    isCurrentMonth(year: number, month: number): boolean;
    getMonth(year: number, month: number): any;
}
